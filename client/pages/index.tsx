import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { initializeApollo, addApolloState } from '../lib/apolloClient'

// import gql from 'graphql-tag';
// import { useQuery } from '@apollo/react-hooks';

import { gql } from "@apollo/client";
import client from "../lib/apollo-client";

// components
import { GetServerSideProps, GetStaticProps } from 'next'
import Products from '../components/Products'


const Home: NextPage = ({propData}) => {
  // for CSR
  //const { loading, data } = useQuery(QUERY);
  //console.log(data);

  console.log(propData)


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossOrigin="anonymous"/>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        {/* client-side rendering */}
        {/* loading || !data? 'loading...' : <Products propData={data} /> */}

        <Products propData={propData.data} />

      </main>
    </div>
  )
}


const QUERY = gql`
  {
    products {
      items {
        name
        description
        id
        assets {
          source
        }
      }
    }
  }
`;


// export const getStaticProps: GetStaticProps = async () => {
//   const apolloClient = initializeApollo()

//   await apolloClient.query({
//     query: QUERY
//   })

//   return addApolloState(apolloClient, {
//     props: { },
//   })
// }


export const getStaticProps: GetStaticProps = async () => {
  const propData  = await client.query({
    query: QUERY
  });

  if (!propData) {
    return {
      notFound: true,
    }
  }

  return {
    props: { propData }, // will be passed to the page component as props
  }
}


// -- vanilla fetch or axios -- //

// export const getStaticProps: GetStaticProps  = async () => {
//   const res = await fetch('http://localhost:5000/shop-api', 
//   {
//     method: 'POST',
//     headers: {
//       'Content-Type': 'application/json',
//     },
//     body: JSON.stringify({query: `
//     query{
//       products{
//         items{
//           name
//           description
//           id
//           assets{
//             source
//           }
//         }
//       }
//     }`}),
//   });

//   const propData = await res.json()
//   //console.log(propData.data.products.items);

//   if (!propData) {
//     return {
//       notFound: true,
//     }
//   }

//   return {
//     props: { propData }, // will be passed to the page component as props
//   }
// }

export default Home
